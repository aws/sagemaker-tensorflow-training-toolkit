version: 0.2

env:
  variables:
    FRAMEWORK_VERSION: '1.13.1'
    GPU_INSTANCE_TYPE: 'ml.p2.xlarge'
    SETUP_FILE: 'setup_cmds.sh'
    SETUP_CMDS: '#!/bin/bash\npip install --upgrade pip\npip install -U -e .\npip install -U -e .[test]'

phases:
  pre_build:
    commands:
      - start-dockerd
      - ACCOUNT=$(aws sts get-caller-identity --query 'Account' --output text)

  build:
    commands:
      # prepare the release (update versions, changelog etc.)
      - git-release --min-version 2.0.0 --prepare

      # run linter
      - tox -e flake8

      # run unit tests
      - tox -e py36,py27 test/unit

      # Create pip archive
      - build_dir="docker/$FRAMEWORK_VERSION"
      - python3 setup.py sdist
      - tar_name=$(ls dist)
      - cp dist/$tar_name $build_dir

      # Build all images
      - python3 scripts/build_all.py --account $ACCOUNT --region $AWS_DEFAULT_REGION

      # Publish all images
      - python3 scripts/publish_all.py --account $ACCOUNT --region $AWS_DEFAULT_REGION

      - base_name="$ACCOUNT.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/sagemaker-tensorflow-scriptmode"
      # run local cpu integ tests
      - $(aws ecr get-login --registry-ids $ACCOUNT --no-include-email --region $AWS_DEFAULT_REGION)
      - IGNORE_COVERAGE=- tox -e py36 -- test/integration/local --docker-base-name $base_name --framework-version $FRAMEWORK_VERSION --processor cpu
      - IGNORE_COVERAGE=- tox -e py36 -- test/integration/local --docker-base-name $base_name --py-version 2 --framework-version $FRAMEWORK_VERSION --processor cpu

      # launch remote gpu instance
      - prefix='ml.'
      - instance_type=${GPU_INSTANCE_TYPE#"$prefix"}
      - create-key-pair
      - launch-ec2-instance --instance-type $instance_type --ami-name dlami-ubuntu
      - printf "$SETUP_CMDS" > $SETUP_FILE

      - py2_cmd="IGNORE_COVERAGE=- tox -e py36 -- test/integration/local --docker-base-name $base_name --py-version 2 --framework-version $FRAMEWORK_VERSION --processor gpu"
      - remote-test --github-repo sagemaker-tensorflow-container --setup-file $SETUP_FILE --branch script-mode --test-cmd "$py2_cmd"
      - py3_cmd="IGNORE_COVERAGE=- tox -e py36 -- test/integration/local --docker-base-name $base_name --framework-version $FRAMEWORK_VERSION --processor gpu"
      - remote-test --github-repo sagemaker-tensorflow-container --branch script-mode --test-cmd "$py3_cmd" --skip-setup

      - |
        echo '[{
          "repository": "sagemaker-tensorflow-scriptmode",
          "tags": [{
            "source": "1.13.1-cpu-py2",
            "dest": ["1.13.1-cpu-py2", "1.13-cpu-py2", "1.13.1-cpu-py2-'${CODEBUILD_BUILD_ID#*:}'"]
          },{
            "source": "1.13.1-cpu-py3",
            "dest": ["1.13.1-cpu-py3", "1.13-cpu-py3", "1.13.1-cpu-py3-'${CODEBUILD_BUILD_ID#*:}'"]
          },{
            "source": "1.13.1-gpu-py2",
            "dest": ["1.13.1-gpu-py2", "1.13-gpu-py2", "1.13.1-gpu-py2-'${CODEBUILD_BUILD_ID#*:}'"]
          },{
            "source": "1.13.1-gpu-py3",
            "dest": ["1.13.1-gpu-py3", "1.13-gpu-py3", "1.13.1-gpu-py3-'${CODEBUILD_BUILD_ID#*:}'"]
          }],
          "test": [
            "IGNORE_COVERAGE=- tox -e py36 -- test/integration/sagemaker -n 32 --region {region} --account-id 520713654638 --docker-base-name sagemaker-tensorflow-scriptmode --framework-version 1.13.1 --processor cpu,gpu --py-version 2,3"
          ]
        }]' > deployments.json

      # publish the release to github
      - git-release --publish

    finally:
      # shut down remote gpu instance
      - cleanup-gpu-instances
      - cleanup-key-pairs

artifacts:
  files:
    - deployments.json
  name: ARTIFACT_1
